{"version":3,"sources":["loading.gif","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","_useState","useState","_useState2","Object","slicedToArray","cases","setCases","_useState3","_useState4","loading","setLoading","useEffect","axios","get","then","res","data","catch","e","console","log","concat","react_default","a","createElement","className","Fragment","src","loadingGIF","alt","react_plotly_default","y","map","x","type","mode","marker","color","layout","title","text","xaxis","yaxis","autosize","automargin","style","width","height","config","responsive","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4OCmDzBC,MA7Cf,WAAe,IAAAC,EACaC,qBADbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACCI,EADDJ,EAAA,GAAAK,EAEgBN,oBAAS,GAFzBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEGE,EAFHF,EAAA,GAgBb,OAHAG,oBAAU,WATRC,IACGC,IAAI,2CACJC,KAAK,SAACC,GAAD,OAASA,EAAIC,OAClBF,KAAK,SAACC,GACLT,EAASS,EAAG,mBACZL,GAAW,KAEZO,MAAM,SAACC,GAAD,OAAOC,QAAQC,IAAR,WAAAC,OAAuBH,OAItC,IAEDI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZhB,EAASa,EAAAC,EAAAC,cAAAF,EAAAC,EAAAG,SAAA,SAAGJ,EAAAC,EAAAC,cAAA,wBAAmBF,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,IAAYC,IAAI,wBAAhD,KAA+EP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAG,SAAA,MACxFrB,GACCiB,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEP,KAAM,CACJ,CACEe,EAAG1B,EAAM2B,IAAI,SAACC,GAAD,OAAOA,EAAC,iBACrBA,EAAG5B,EAAM2B,IAAI,SAACC,GAAD,OAAOA,EAAC,UACrBC,KAAM,UACNC,KAAM,gBACNC,OAAQ,CAAEC,MAAO,UAGrBC,OAAQ,CACNC,MAAO,CAAEC,KAAM,wBACfC,MAAO,CAAEF,MAAO,QAChBG,MAAO,CAAEH,MAAO,aAChBI,UAAU,EACVC,YAAY,GAEdC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,OAAQ,CAAEC,YAAY,OChCjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCvD,EAAAqB,EAAA,GAAAJ,KAAAjB,EAAAwD,KAAA,UAAqBvC,KAAK,SAAAwC,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCFdS,IAASC,OACPvC,EAAAC,EAAAC,cAACF,EAAAC,EAAMuC,WAAP,KACExC,EAAAC,EAAAC,cAACuC,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.c2d9572c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.493418ba.gif\";","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport loadingGIF from './loading.gif';\n\nfunction App() {\n  const [cases, setCases] = useState();\n  const [loading, setLoading]= useState(true);\n  const getData = () => {\n    axios\n      .get(\"https://data.covid19india.org/data.json\")\n      .then((res) => res.data)\n      .then((res) => {\n        setCases(res[\"cases_time_series\"]);\n        setLoading(false);\n      })\n      .catch((e) => console.log(`Error : ${e}`));\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return (\n    <div className=\"App\">\n      {loading ?<> <h1>Loading...</h1><img src={loadingGIF} alt=\"Loading Spinner GIF\" /> </> : <></> }\n      {cases && (\n        <Plot\n          data={[\n            {\n              y: cases.map((x) => x[\"dailyconfirmed\"]),\n              x: cases.map((x) => x[\"dateymd\"]),\n              type: \"scatter\",\n              mode: \"lines+markers\",\n              marker: { color: \"blue\" },\n            },\n          ]}\n          layout={{\n            title: { text: \"COVID Cases In India\" },\n            xaxis: { title: \"Date\" },\n            yaxis: { title: \"New Cases\" },\n            autosize: true,\n            automargin: true,\n          }}\n          style={{ width: \"100%\", height: \"100%\" }}\n          config={{ responsive: true }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}